# Si el AUC actual és millor que el millor fins ara, en el quedem. Així capturem el que maximitza best_auc
if (current_auc > best_auc) {
best_auc <- current_auc
best_alpha <- alpha_val
best_lambda <- best_lambda_for_alpha
}
}
# Retornar els millors hiperparàmetres
return(list(best_alpha = best_alpha, best_lambda = best_lambda, best_auc = best_auc))
}
best_hyperparams_elasticnet_grade_1 <- hyperparams_en_search(X,"is_grade_1",alpha,lambdes)
# Mostra els millors hiperparàmetres per a cada grau histològic
cat("Els millors hiperparàmetres trobats per validació creuada sobre l'avaluació del grau histològic 1, són: [alpha] --> ", best_hyperparams_elasticnet_grade_1$best_alpha,
" [lambda] -->", best_hyperparams_elasticnet_grade_1$best_lambda ,"\n")
elasticnet_importance_by_grade <- function(X, histological_grade, best_alpha, best_lambda) {
cat("Cerca d'importàncies ",histological_grade, " \n")
# Entrenament del model final amb els millors hiperparàmetres
# Volem saber la importància de cada gen respecte cada tipus de variable objectiu, per tant, no caldrà subdidir entre train i test
# ja que no es volen realitzar prediccions de classificació. Tot el conjunt 'X' serà d'entrenament
en_model <- glmnet(
X, dataset[[histological_grade]],
alpha = best_alpha,
lambda = best_lambda,
family = "binomial"
)
# Obtenir les importàncies de les característiques a partir dels coeficients
coeficients <- coef(en_model, s = best_lambda)
feature_importance <- data.frame(
Feature = rownames(as.matrix(coeficients)),
Coef = as.vector(as.matrix(coeficients))
)
# Ordenem els coeficients obtinguts de major a menor
# Els valors negatius representen importàncies positivies de "protecció" i els positius de "risc" de patiment.
feature_importance <- feature_importance %>%
filter(Coef > 0) %>%
arrange(desc(Coef))
return(feature_importance)
}
# Establim el nombre de mostres que es volen mostrar en el rànking dels millors i els pitjors
top_num = 6
# A partir de la funció definida anteriorment, obtenim les importàncies de les característiques (gens)
# per a cada classe (grau histològic: 1, 2 i 3)
# importàncies GRAU HISTOLÒGIC 1
importance_elasticnet_grade_1 <- elasticnet_importance_by_grade(X,"is_grade_1", best_hyperparams_elasticnet_grade_1$best_alpha,best_hyperparams_elasticnet_grade_1$best_lambda)
cat("Top ", top_num,  ": GRAU HISTOLÒGIC 1 --> Gens/s més importants:\n")
print(head(importance_elasticnet_grade_1, top_num))
best_hyperparams_elasticnet_grade_2 <- hyperparams_en_search(X,"is_grade_2",alpha,lambdes)
cat("Els millors hiperparàmetres trobats per validació creuada sobre l'avaluació del grau histològic 2, són: [alpha] --> ", best_hyperparams_elasticnet_grade_2$best_alpha,
" [lambda] -->", best_hyperparams_elasticnet_grade_2$best_lambda ,"\n")
importance_elasticnet_grade_2 <- elasticnet_importance_by_grade(X,"is_grade_2", best_hyperparams_elasticnet_grade_2$best_alpha,best_hyperparams_elasticnet_grade_2$best_lambda)
# importàncies GRAU HISTOLÒGIC 3
cat("Top ", top_num,  ": GRAU HISTOLÒGIC 2 --> Gens/s més importants:\n")
print(head(importance_elasticnet_grade_2, top_num))
# TOP top_num millors importàncies genètiques GRAU HISTOLÒGIC 3
elasticnet_importance_by_grade <- function(X, histological_grade, best_alpha, best_lambda) {
cat("Cerca d'importàncies ",histological_grade, " \n")
# Entrenament del model final amb els millors hiperparàmetres
# Volem saber la importància de cada gen respecte cada tipus de variable objectiu, per tant, no caldrà subdidir entre train i test
# ja que no es volen realitzar prediccions de classificació. Tot el conjunt 'X' serà d'entrenament
en_model <- glmnet(
X, dataset[[histological_grade]],
alpha = best_alpha,
lambda = best_lambda,
family = "binomial"
)
# Obtenir les importàncies de les característiques a partir dels coeficients
coeficients <- coef(en_model, s = best_lambda)
feature_importance <- data.frame(
Feature = rownames(as.matrix(coeficients)),
Coef = as.vector(as.matrix(coeficients))
)
# Ordenem els coeficients per valor absolut (importància).
# Els valors negatius representen importàncies positivies de "protecció" i els positius de "risc" de patiment.
feature_importance <- feature_importance %>%
filter(Feature != "(Intercept)") %>%  # Excloure l'intercept.
mutate(AbsCoef = abs(Coef)) %>%       # Calcular el valor absolut dels coeficients.
arrange(desc(AbsCoef))               # Ordenar pel valor absolut de major a menor.
return(feature_importance)
}
top_num = 6
importance_elasticnet_grade_1 <- elasticnet_importance_by_grade(X,"is_grade_1", best_hyperparams_elasticnet_grade_1$best_alpha,best_hyperparams_elasticnet_grade_1$best_lambda)
# importàncies GRAU HISTOLÒGIC 2
importance_elasticnet_grade_2 <- elasticnet_importance_by_grade(X,"is_grade_2", best_hyperparams_elasticnet_grade_2$best_alpha,best_hyperparams_elasticnet_grade_2$best_lambda)
# importàncies GRAU HISTOLÒGIC 3
importance_elasticnet_grade_3 <- elasticnet_importance_by_grade(X,"is_grade_3", best_hyperparams_elasticnet_grade_3$best_alpha,best_hyperparams_elasticnet_grade_3$best_lambda)
cat("Top ", top_num,  ": GRAU HISTOLÒGIC 1 --> Gens/s més importants:\n")
print(head(importance_elasticnet_grade_1, top_num))
# TOP top_num millors importàncies genètiques GRAU HISTOLÒGIC 2
cat("Top ", top_num,  ": GRAU HISTOLÒGIC 2 --> Gens/s més importants:\n")
print(head(importance_elasticnet_grade_2, top_num))
# TOP top_num millors importàncies genètiques GRAU HISTOLÒGIC 3
cat("Top ", top_num,  ": GRAU HISTOLÒGIC 3 --> Gens/s més importants:\n")
print(head(importance_elasticnet_grade_3, top_num))
top_num = 10
cat("Top ", top_num,  ": GRAU HISTOLÒGIC 1 --> Gens/s més importants:\n")
print(head(importance_elasticnet_grade_1, top_num))
# TOP top_num millors importàncies genètiques GRAU HISTOLÒGIC 2
cat("Top ", top_num,  ": GRAU HISTOLÒGIC 2 --> Gens/s més importants:\n")
print(head(importance_elasticnet_grade_2, top_num))
# TOP top_num millors importàncies genètiques GRAU HISTOLÒGIC 3
cat("Top ", top_num,  ": GRAU HISTOLÒGIC 3 --> Gens/s més importants:\n")
print(head(importance_elasticnet_grade_3, top_num))
# Afegim una columna per categoritzar els coeficients com a positius o negatius
importance_elasticnet_grade_1 <- importance_elasticnet_grade_1 %>%
mutate(Sign = ifelse(Coef > 0, "Positiu (Risc)", "Negatiu (Protecció)"))
# Gràfic amb diferenciació de colors per signe del coeficient
plot <- ggplot(importance_elasticnet_grade_1[1:top_num,],
aes(x = reorder(Feature, Coef), y = Coef, fill = Sign)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(values = c("Positiu (Risc)" = "blue", "Negatiu (Protecció)" = "red")) +
labs(
title = paste0("Elastic Net - Top ", top_num, " Importància Genètica (Grau Histològic 1)"),
subtitle = "Coeficients positius (risc) i negatius (protecció)",
x = "Gens",
y = "Coeficient"
) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = "white"), # Fons del gràfic
plot.background = element_rect(fill = "white", color = "white"),  # Fons del quadre del gràfic
panel.grid.major = element_line(color = "grey80"),                # Línies de la quadrícula
panel.grid.minor = element_blank(),                               # Línies de quadrícula menors
legend.position = "top"                                           # Llegenda a la part superior
)
# Guardem el gràfic generat
ggsave(filename = paste0(path_images,"Grau_Histologic_1_ElasticNet.png"),
plot = plot, width = 15, height = 10)
setwd("C:/Users/ernea/OneDrive/Escritorio/UOC - Data Science/SEMESTRE 5 TFM/src/Treball_Final_Master/")
path_images <- "images/ElasticNet/"
# Guardem el gràfic generat
ggsave(filename = paste0(path_images,"Grau_Histologic_1_ElasticNet.png"),
plot = plot, width = 15, height = 10)
importance_elasticnet_grade_2 <- importance_elasticnet_grade_2 %>%
mutate(Sign = ifelse(Coef > 0, "Positiu (Risc)", "Negatiu (Protecció)"))
# Afegim una columna per categoritzar els coeficients com a positius o negatius
importance_elasticnet_grade_2 <- importance_elasticnet_grade_2 %>%
mutate(Sign = ifelse(Coef > 0, "Positiu (Risc)", "Negatiu (Protecció)"))
plot <- ggplot(importance_elasticnet_grade_2[1:top_num,],
aes(x = reorder(Feature, Coef), y = Coef, fill = Sign)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(values = c("Positiu (Risc)" = "blue", "Negatiu (Protecció)" = "red")) +
labs(
title = paste0("Elastic Net - Top ", top_num, " Importància Genètica (Grau Histològic 2)"),
subtitle = "Coeficients positius (risc) i negatius (protecció)",
x = "Gens",
y = "Coeficient"
) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = "white"), # Fons del gràfic
plot.background = element_rect(fill = "white", color = "white"),  # Fons del quadre del gràfic
panel.grid.major = element_line(color = "grey80"),                # Línies de la quadrícula
panel.grid.minor = element_blank(),                               # Línies de quadrícula menors
legend.position = "top"                                           # Llegenda a la part superior
)
ggsave(filename = paste0(path_images,"Grau_Histologic_2_ElasticNet.png"), plot = plot, width = 15, height = 10)
importance_elasticnet_grade_3 <- importance_elasticnet_grade_3 %>%
mutate(Sign = ifelse(Coef > 0, "Positiu (Risc)", "Negatiu (Protecció)"))
plot <- ggplot(importance_elasticnet_grade_3[1:top_num,],
aes(x = reorder(Feature, Coef), y = Coef, fill = Sign)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(values = c("Positiu (Risc)" = "blue", "Negatiu (Protecció)" = "red")) +
labs(
title = paste0("Elastic Net - Top ", top_num, " Importància Genètica (Grau Histològic 3)"),
subtitle = "Coeficients positius (risc) i negatius (protecció)",
x = "Gens",
y = "Coeficient"
) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = "white"), # Fons del gràfic
plot.background = element_rect(fill = "white", color = "white"),  # Fons del quadre del gràfic
panel.grid.major = element_line(color = "grey80"),                # Línies de la quadrícula
panel.grid.minor = element_blank(),                               # Línies de quadrícula menors
legend.position = "top"                                           # Llegenda a la part superior
)
ggsave(filename = paste0(path_images,"Grau_Histologic_3_ElasticNet.png"), plot = plot, width = 10, height = 10)
plot <- ggplot(importance_elasticnet_grade_1[1:top_num,],
aes(x = abs(Coef), y = reorder(Feature, abs(Coef)), color = Sign)) +
geom_point(size = 3) +
scale_color_manual(values = c("Positiu (Risc)" = "blue", "Negatiu (Protecció)" = "red")) +
labs(
title = paste0("Elastic Net - Top ", top_num, " Importància Genètica (Grau Histològic 1)"),
subtitle = "Coeficients positius (risc) i negatius (protecció)",
x = "Importància (|Coef|)",
y = "Gens"
) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = "white"), # Fons del gràfic
plot.background = element_rect(fill = "white", color = "white"),  # Fons del quadre del gràfic
panel.grid.major = element_line(color = "grey80"),                # Línies de la quadrícula
panel.grid.minor = element_blank(),                               # Línies de quadrícula menors
legend.position = "top"                                           # Llegenda a la part superior
)
# Guardem el gràfic generat
ggsave(filename = paste0(path_images,"Grau_Histologic_1_ElasticNet_punts.png"), plot = plot, width = 15, height = 10)
plot <- ggplot(importance_elasticnet_grade_2[1:top_num,],
aes(x = abs(Coef), y = reorder(Feature, abs(Coef)), color = Sign)) +
geom_point(size = 3) +
scale_color_manual(values = c("Positiu (Risc)" = "blue", "Negatiu (Protecció)" = "red")) +
labs(
title = paste0("Elastic Net - Top ", top_num, " Importància Genètica (Grau Histològic 2)"),
subtitle = "Coeficients positius (risc) i negatius (protecció)",
x = "Importància (|Coef|)",
y = "Gens"
) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = "white"), # Fons del gràfic
plot.background = element_rect(fill = "white", color = "white"),  # Fons del quadre del gràfic
panel.grid.major = element_line(color = "grey80"),                # Línies de la quadrícula
panel.grid.minor = element_blank(),                               # Línies de quadrícula menors
legend.position = "top"                                           # Llegenda a la part superior
)
# Guardem el gràfic generat
ggsave(filename = paste0(path_images,"Grau_Histologic_2_ElasticNet_punts.png"), plot = plot, width = 15, height = 10)
plot <- ggplot(importance_elasticnet_grade_3[1:top_num,],
aes(x = abs(Coef), y = reorder(Feature, abs(Coef)), color = Sign)) +
geom_point(size = 3) +
scale_color_manual(values = c("Positiu (Risc)" = "blue", "Negatiu (Protecció)" = "red")) +
labs(
title = paste0("Elastic Net - Top ", top_num, " Importància Genètica (Grau Histològic 3)"),
subtitle = "Coeficients positius (risc) i negatius (protecció)",
x = "Importància (|Coef|)",
y = "Gens"
) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = "white"), # Fons del gràfic
plot.background = element_rect(fill = "white", color = "white"),  # Fons del quadre del gràfic
panel.grid.major = element_line(color = "grey80"),                # Línies de la quadrícula
panel.grid.minor = element_blank(),                               # Línies de quadrícula menors
legend.position = "top"                                           # Llegenda a la part superior
)
# Guardem el gràfic generat
ggsave(filename = paste0(path_images,"Grau_Histologic_3_ElasticNet_punts.png"), plot = plot, width = 10, height = 10)
# Afegim una columna per categoritzar els coeficients com a positius o negatius
importance_elasticnet_grade_2 <- importance_elasticnet_grade_2 %>%
mutate(Signe = ifelse(Coef > 0, "Positiu (Risc)", "Negatiu (Protecció)"))
plot <- ggplot(importance_elasticnet_grade_2[1:top_num,],
aes(x = reorder(Feature, Coef), y = Coef, fill = Sign)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(values = c("Positiu (Risc)" = "blue", "Negatiu (Protecció)" = "red")) +
labs(
title = paste0("Elastic Net - Top ", top_num, " Importància Genètica (Grau Histològic 2)"),
subtitle = "Coeficients positius (risc) i negatius (protecció)",
x = "Gens",
y = "Coeficient"
) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = "white"), # Fons del gràfic
plot.background = element_rect(fill = "white", color = "white"),  # Fons del quadre del gràfic
panel.grid.major = element_line(color = "grey80"),                # Línies de la quadrícula
panel.grid.minor = element_blank(),                               # Línies de quadrícula menors
legend.position = "top"                                           # Llegenda a la part superior
)
# Guardem el gràfic generat
ggsave(filename = paste0(path_images,"Grau_Histologic_2_ElasticNet.png"), plot = plot, width = 15, height = 10)
# Afegim una columna per categoritzar els coeficients com a positius o negatius
importance_elasticnet_grade_3 <- importance_elasticnet_grade_3 %>%
mutate(Sign = ifelse(Coef > 0, "Positiu (Risc)", "Negatiu (Protecció)"))
plot <- ggplot(importance_elasticnet_grade_3[1:top_num,],
aes(x = reorder(Feature, Coef), y = Coef, fill = Sign)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(values = c("Positiu (Risc)" = "blue", "Negatiu (Protecció)" = "red")) +
labs(
title = paste0("Elastic Net - Top ", top_num, " Importància Genètica (Grau Histològic 3)"),
subtitle = "Coeficients positius (risc) i negatius (protecció)",
x = "Gens",
y = "Coeficient"
) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = "white"), # Fons del gràfic
plot.background = element_rect(fill = "white", color = "white"),  # Fons del quadre del gràfic
panel.grid.major = element_line(color = "grey80"),                # Línies de la quadrícula
panel.grid.minor = element_blank(),                               # Línies de quadrícula menors
legend.position = "top"                                           # Llegenda a la part superior
)
# Guardem el gràfic generat
ggsave(filename = paste0(path_images,"Grau_Histologic_3_ElasticNet.png"), plot = plot, width = 10, height = 10)
# Visualització de resultants emprant diagrames de punts amb 'ggplot'
plot <- ggplot(importance_elasticnet_grade_1[1:top_num,],
aes(x = abs(Coef), y = reorder(Feature, abs(Coef)), color = Sign)) +
geom_point(size = 3) +
scale_color_manual(values = c("Positiu (Risc)" = "blue", "Negatiu (Protecció)" = "red")) +
labs(
title = paste0("Elastic Net - Top ", top_num, " Importància Genètica (Grau Histològic 1)"),
subtitle = "Coeficients positius (risc) i negatius (protecció)",
x = "Importància (|Coef|)",
y = "Gens"
) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = "white"), # Fons del gràfic
plot.background = element_rect(fill = "white", color = "white"),  # Fons del quadre del gràfic
panel.grid.major = element_line(color = "grey80"),                # Línies de la quadrícula
panel.grid.minor = element_blank(),                               # Línies de quadrícula menors
legend.position = "top"                                           # Llegenda a la part superior
)
# Guardem el gràfic generat
ggsave(filename = paste0(path_images,"Grau_Histologic_1_ElasticNet_punts.png"), plot = plot, width = 15, height = 10)
plot <- ggplot(importance_elasticnet_grade_2[1:top_num,],
aes(x = abs(Coef), y = reorder(Feature, abs(Coef)), color = Sign)) +
geom_point(size = 3) +
scale_color_manual(values = c("Positiu (Risc)" = "blue", "Negatiu (Protecció)" = "red")) +
labs(
title = paste0("Elastic Net - Top ", top_num, " Importància Genètica (Grau Histològic 2)"),
subtitle = "Coeficients positius (risc) i negatius (protecció)",
x = "Importància (|Coef|)",
y = "Gens"
) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = "white"), # Fons del gràfic
plot.background = element_rect(fill = "white", color = "white"),  # Fons del quadre del gràfic
panel.grid.major = element_line(color = "grey80"),                # Línies de la quadrícula
panel.grid.minor = element_blank(),                               # Línies de quadrícula menors
legend.position = "top"                                           # Llegenda a la part superior
)
# Guardem el gràfic generat
ggsave(filename = paste0(path_images,"Grau_Histologic_2_ElasticNet_punts.png"), plot = plot, width = 15, height = 10)
plot <- ggplot(importance_elasticnet_grade_3[1:top_num,],
aes(x = abs(Coef), y = reorder(Feature, abs(Coef)), color = Sign)) +
geom_point(size = 3) +
scale_color_manual(values = c("Positiu (Risc)" = "blue", "Negatiu (Protecció)" = "red")) +
labs(
title = paste0("Elastic Net - Top ", top_num, " Importància Genètica (Grau Histològic 3)"),
subtitle = "Coeficients positius (risc) i negatius (protecció)",
x = "Importància (|Coef|)",
y = "Gens"
) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = "white"), # Fons del gràfic
plot.background = element_rect(fill = "white", color = "white"),  # Fons del quadre del gràfic
panel.grid.major = element_line(color = "grey80"),                # Línies de la quadrícula
panel.grid.minor = element_blank(),                               # Línies de quadrícula menors
legend.position = "top"                                           # Llegenda a la part superior
)
# Guardem el gràfic generat
ggsave(filename = paste0(path_images,"Grau_Histologic_3_ElasticNet_punts.png"), plot = plot, width = 10, height = 10)
# A partir de la funció definida anteriorment, obtenim les importàncies de les característiques (gens)
# per a cada classe (grau histològic: 1, 2 i 3)
# importàncies GRAU HISTOLÒGIC 1
importance_elasticnet_grade_1 <- elasticnet_importance_by_grade(X,"is_grade_1", best_hyperparams_elasticnet_grade_1$best_alpha,best_hyperparams_elasticnet_grade_1$best_lambda)
# importàncies GRAU HISTOLÒGIC 2
importance_elasticnet_grade_2 <- elasticnet_importance_by_grade(X,"is_grade_2", best_hyperparams_elasticnet_grade_2$best_alpha,best_hyperparams_elasticnet_grade_2$best_lambda)
# importàncies GRAU HISTOLÒGIC 3
importance_elasticnet_grade_3 <- elasticnet_importance_by_grade(X,"is_grade_3", best_hyperparams_elasticnet_grade_3$best_alpha,best_hyperparams_elasticnet_grade_3$best_lambda)
# Mostra del TOP 10 en el rànking de millors resultats d'importància de gens o conjunts de gens per a cada grau histològic
# TOP top_num millors importàncies genètiques GRAU HISTOLÒGIC 1
cat("Top ", top_num,  ": GRAU HISTOLÒGIC 1 --> Gens/s més importants:\n")
print(head(importance_elasticnet_grade_1, top_num))
# TOP top_num millors importàncies genètiques GRAU HISTOLÒGIC 2
cat("Top ", top_num,  ": GRAU HISTOLÒGIC 2 --> Gens/s més importants:\n")
print(head(importance_elasticnet_grade_2, top_num))
# TOP top_num millors importàncies genètiques GRAU HISTOLÒGIC 3
cat("Top ", top_num,  ": GRAU HISTOLÒGIC 3 --> Gens/s més importants:\n")
print(head(importance_elasticnet_grade_3, top_num))
# Visualització de resultants emprant gràfiques verticals amb 'ggplot'
# Afegim una columna per categoritzar els coeficients com a positius o negatius
importance_elasticnet_grade_1 <- importance_elasticnet_grade_1 %>%
mutate(Signe = ifelse(Coef > 0, "Positiu (Risc)", "Negatiu (Protecció)"))
# Gràfic amb diferenciació de colors per signe del coeficient.
# blau pels coeficients positius (sentit negatiu, ja que denota risc de patiment)
# vermell pels coeficients negatius (sentit positiu, ja que denota protecció)
plot <- ggplot(importance_elasticnet_grade_1[1:top_num,],
aes(x = reorder(Feature, Coef), y = Coef, fill = Signe)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(values = c("Positiu (Risc)" = "blue", "Negatiu (Protecció)" = "red")) +
labs(
title = paste0("Elastic Net - Top ", top_num, " Importància Genètica (Grau Histològic 1)"),
subtitle = "Coeficients positius (risc) i negatius (protecció)",
x = "Gens",
y = "Coeficient"
) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = "white"), # Fons del gràfic
plot.background = element_rect(fill = "white", color = "white"),  # Fons del quadre del gràfic
panel.grid.major = element_line(color = "grey80"),                # Línies de la quadrícula
panel.grid.minor = element_blank(),                               # Línies de quadrícula menors
legend.position = "top"                                           # Llegenda a la part superior
)
# Guardem el gràfic generat
ggsave(filename = paste0(path_images,"Grau_Histologic_1_ElasticNet.png"),
plot = plot, width = 15, height = 10)
# Afegim una columna per categoritzar els coeficients com a positius o negatius
importance_elasticnet_grade_2 <- importance_elasticnet_grade_2 %>%
mutate(Signe = ifelse(Coef > 0, "Positiu (Risc)", "Negatiu (Protecció)"))
plot <- ggplot(importance_elasticnet_grade_2[1:top_num,],
aes(x = reorder(Feature, Coef), y = Coef, fill = Signe)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(values = c("Positiu (Risc)" = "blue", "Negatiu (Protecció)" = "red")) +
labs(
title = paste0("Elastic Net - Top ", top_num, " Importància Genètica (Grau Histològic 2)"),
subtitle = "Coeficients positius (risc) i negatius (protecció)",
x = "Gens",
y = "Coeficient"
) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = "white"), # Fons del gràfic
plot.background = element_rect(fill = "white", color = "white"),  # Fons del quadre del gràfic
panel.grid.major = element_line(color = "grey80"),                # Línies de la quadrícula
panel.grid.minor = element_blank(),                               # Línies de quadrícula menors
legend.position = "top"                                           # Llegenda a la part superior
)
# Guardem el gràfic generat
ggsave(filename = paste0(path_images,"Grau_Histologic_2_ElasticNet.png"), plot = plot, width = 15, height = 10)
# Afegim una columna per categoritzar els coeficients com a positius o negatius
importance_elasticnet_grade_3 <- importance_elasticnet_grade_3 %>%
mutate(Signe = ifelse(Coef > 0, "Positiu (Risc)", "Negatiu (Protecció)"))
plot <- ggplot(importance_elasticnet_grade_3[1:top_num,],
aes(x = reorder(Feature, Coef), y = Coef, fill = Signe)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_manual(values = c("Positiu (Risc)" = "blue", "Negatiu (Protecció)" = "red")) +
labs(
title = paste0("Elastic Net - Top ", top_num, " Importància Genètica (Grau Histològic 3)"),
subtitle = "Coeficients positius (risc) i negatius (protecció)",
x = "Gens",
y = "Coeficient"
) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = "white"), # Fons del gràfic
plot.background = element_rect(fill = "white", color = "white"),  # Fons del quadre del gràfic
panel.grid.major = element_line(color = "grey80"),                # Línies de la quadrícula
panel.grid.minor = element_blank(),                               # Línies de quadrícula menors
legend.position = "top"                                           # Llegenda a la part superior
)
# Guardem el gràfic generat
ggsave(filename = paste0(path_images,"Grau_Histologic_3_ElasticNet.png"), plot = plot, width = 10, height = 10)
# Visualització de resultants emprant diagrames de punts amb 'ggplot'
plot <- ggplot(importance_elasticnet_grade_1[1:top_num,],
aes(x = abs(Coef), y = reorder(Feature, abs(Coef)), color = Signe)) +
geom_point(size = 3) +
scale_color_manual(values = c("Positiu (Risc)" = "blue", "Negatiu (Protecció)" = "red")) +
labs(
title = paste0("Elastic Net - Top ", top_num, " Importància Genètica (Grau Histològic 1)"),
subtitle = "Coeficients positius (risc) i negatius (protecció)",
x = "Importància (|Coef|)",
y = "Gens"
) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = "white"), # Fons del gràfic
plot.background = element_rect(fill = "white", color = "white"),  # Fons del quadre del gràfic
panel.grid.major = element_line(color = "grey80"),                # Línies de la quadrícula
panel.grid.minor = element_blank(),                               # Línies de quadrícula menors
legend.position = "top"                                           # Llegenda a la part superior
)
# Guardem el gràfic generat
ggsave(filename = paste0(path_images,"Grau_Histologic_1_ElasticNet_punts.png"), plot = plot, width = 15, height = 10)
plot <- ggplot(importance_elasticnet_grade_2[1:top_num,],
aes(x = abs(Coef), y = reorder(Feature, abs(Coef)), color = Signe)) +
geom_point(size = 3) +
scale_color_manual(values = c("Positiu (Risc)" = "blue", "Negatiu (Protecció)" = "red")) +
labs(
title = paste0("Elastic Net - Top ", top_num, " Importància Genètica (Grau Histològic 2)"),
subtitle = "Coeficients positius (risc) i negatius (protecció)",
x = "Importància (|Coef|)",
y = "Gens"
) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = "white"), # Fons del gràfic
plot.background = element_rect(fill = "white", color = "white"),  # Fons del quadre del gràfic
panel.grid.major = element_line(color = "grey80"),                # Línies de la quadrícula
panel.grid.minor = element_blank(),                               # Línies de quadrícula menors
legend.position = "top"                                           # Llegenda a la part superior
)
# Guardem el gràfic generat
ggsave(filename = paste0(path_images,"Grau_Histologic_2_ElasticNet_punts.png"), plot = plot, width = 15, height = 10)
plot <- ggplot(importance_elasticnet_grade_3[1:top_num,],
aes(x = abs(Coef), y = reorder(Feature, abs(Coef)), color = Signe)) +
geom_point(size = 3) +
scale_color_manual(values = c("Positiu (Risc)" = "blue", "Negatiu (Protecció)" = "red")) +
labs(
title = paste0("Elastic Net - Top ", top_num, " Importància Genètica (Grau Histològic 3)"),
subtitle = "Coeficients positius (risc) i negatius (protecció)",
x = "Importància (|Coef|)",
y = "Gens"
) +
theme_minimal() +
theme(
panel.background = element_rect(fill = "white", color = "white"), # Fons del gràfic
plot.background = element_rect(fill = "white", color = "white"),  # Fons del quadre del gràfic
panel.grid.major = element_line(color = "grey80"),                # Línies de la quadrícula
panel.grid.minor = element_blank(),                               # Línies de quadrícula menors
legend.position = "top"                                           # Llegenda a la part superior
)
# Guardem el gràfic generat
ggsave(filename = paste0(path_images,"Grau_Histologic_3_ElasticNet_punts.png"), plot = plot, width = 10, height = 10)
if (!require("catboost")) install.packages("catboost", repos = "https://cloud.r-project.org/")
library(catboost)
if (!require("catboost")) install.packages("catboost")
if (!require("remotes")) install.packages("remotes")
remotes::install_github('catboost/catboost', subdir = 'catboost/R-package')
library(catboost)
library(catboost)
